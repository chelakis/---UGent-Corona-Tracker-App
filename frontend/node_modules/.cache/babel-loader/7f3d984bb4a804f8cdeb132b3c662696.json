{"remainingRequest":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/babel-loader/lib/index.js!/home/chelakis/infsec/infsecfinal/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chelakis/infsec/infsecfinal/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chelakis/infsec/infsecfinal/frontend/src/components/Texts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chelakis/infsec/infsecfinal/frontend/src/components/Texts.vue","mtime":1591142934776},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ0AvYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGhlYWx0aFN0YXR1czogbnVsbCwKICAgICAgcmlzazogbnVsbCwKICAgICAgYmdDb2xvcjogJ3llbGxvdycsCiAgICAgIGJnV2lkdGg6ICcxMDAlJywKICAgICAgYmdIZWlnaHQ6ICczMHB4JwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFmZmVjdGVkOiBmdW5jdGlvbiBhZmZlY3RlZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzZWxmID0gdGhpczsgLy8gY29uc29sZS5sb2coc2VsZi4kc2Vzc2lvbi5nZXQoJ2p3dCcpKQoKICAgICAgYXhpb3MucHV0KCcvdXNlcnMvc3RhdHVzJywgewogICAgICAgIHBvc2l0aXZlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHNlbGYuJHNlc3Npb24uZ2V0KCdqd3QnKQogICAgICAgIH0KICAgICAgfSkudGhlbihheGlvcy5nZXQoJy91c2Vycy9zdGF0dXMnLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHNlbGYuJHNlc3Npb24uZ2V0KCdqd3QnKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gX3RoaXMuaGVhbHRoU3RhdHVzID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICB9LCB0aGlzLnJpc2sgPSAwKSkudGhlbihhbGVydCgiWW91IHdlcmUgZGlhZ25vc2VkIHBvc2l0aXZlIHRvIENvdmlkLTE5LCBzdGF5IGhvbWUhXG5cbiIgKyAiQWxsIHVzZXJzIHdobyBjYW1lIGluIGNvbnRhY3Qgd2l0aCB5b3UgdGhlIGxhc3QgZmV3IGRheXMgbWF5IGJlIGF0IHJpc2sgYW5kIHdpbGwgZ2V0IG5vdGlmaWVkIHRvIHByZXZlbnQgc3ByZWFkaW5nLiIpKSAvLyAudGhlbih0aGlzLmhlYWx0aFN0YXR1cyA9ICdjYXJyaWVyJykKICAgICAgLnRoZW4odGhpcy4kZm9yY2VVcGRhdGUoKSk7CiAgICB9LAogICAgY2hlY2tlcjogZnVuY3Rpb24gY2hlY2tlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgc2VsZiA9IHRoaXM7CiAgICAgIGF4aW9zLmdldCgnL3VzZXJzL3N0YXR1cycsIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgc2VsZi4kc2Vzc2lvbi5nZXQoJ2p3dCcpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiBfdGhpczIuaGVhbHRoU3RhdHVzID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICB9LCB0aGlzLnJpc2sgPSAwKS50aGVuKGFsZXJ0KCJDaGVja2luZyBmb3IgY3VycmVudCBoZWFsdGggc3RhdHVzXG5cbiIpKTsKICAgIH0sCiAgICBpbnRlcnZhbHM6IGZ1bmN0aW9uIGludGVydmFscygpIHsKICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIHRoaXMuY2hlY2tlcjsKICAgICAgfSwgMzAwMCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgYXhpb3MuZ2V0KCcvdXNlcnMvc3RhdHVzJywgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBzZWxmLiRzZXNzaW9uLmdldCgnand0JykKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIF90aGlzMy5oZWFsdGhTdGF0dXMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICB9LCB0aGlzLnJpc2sgPSAwKS50aGVuKHRoaXMuJGZvcmNlVXBkYXRlKCkpOyAvLyBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKXsKICAgIC8vICAgICAgICAgICAgICAgICAgICAgKGF4aW9zLmdldCgnL3VzZXJzL3N0YXR1cycsIHsKICAgIC8vICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogeyAKICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyAgc2VsZi4kc2Vzc2lvbi5nZXQoJ2p3dCcpCiAgICAvLyAgICAgICAgICAgICAgICAgICAgIH0KICAgIC8vICAgICAgICAgICAgICAgICB9KQogICAgLy8gLnRoZW4ocmVzcG9uc2UgPT4gdGhpcy5oZWFsdGhTdGF0dXMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2UpKQogICAgLy8gLnRoZW4oY29uc29sZS5sb2codGhpcy5oZWFsdGhTdGF0dXMpKQogICAgLy8gLnRoZW4odGhpcy5oZWFsdGhTdGF0dXMuJGZvcmNlVXBkYXRlKCkpCiAgICAvLyAudGhlbih0aGlzLiAkZm9yY2VVcGRhdGUgKHRoaXMuaGVhbHRoU3RhdHVzKSk7fSwgMTAwMCkKICB9Cn07"},{"version":3,"sources":["Texts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,KAAA,MAAA,SAAA;AAEA,eAAA;AAEA,EAAA,IAFA,kBAEA;AAEA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,QAHA;AAIA,MAAA,OAAA,EAAA,MAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAQA,GAZA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AAAA;;AAEA,UAAA,IAAA,GAAA,IAAA,CAFA,CAGA;;AAEA,MAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA;AAAA,2BAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAAA;AADA,OAAA,EAGA,IAHA,CAGA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA,kBADA;AAEA,UAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,OAAA,EAMA,IANA,CAMA,UAAA,QAAA;AAAA,eAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAAA,OANA,EAMA,KAAA,IAAA,GAAA,CANA,CAHA,EAYA,IAZA,CAYA,KAAA,CAAA,4DACA,qHADA,CAZA,EAcA;AAdA,OAeA,IAfA,CAeA,KAAA,YAAA,EAfA;AAmBA,KAzBA;AA2BA,IAAA,OAAA,EAAA,mBAAA;AAAA;;AAEA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA,kBADA;AAEA,UAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,OAAA,EAMA,IANA,CAMA,UAAA,QAAA;AAAA,eAAA,MAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAAA,OANA,EAMA,KAAA,IAAA,GAAA,CANA,EAOA,IAPA,CAOA,KAAA,CAAA,wCAAA,CAPA;AASA,KAvCA;AA2CA,IAAA,SAAA,EAAA,qBAAA;AACA,MAAA,WAAA,CAAA,YAAA;AAAA,aAAA,OAAA;AACA,OADA,EACA,IADA,CAAA;AAEA;AA9CA,GArBA;AAwEA,EAAA,OAxEA,qBAwEA;AAAA;;AAEA,QAAA,IAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,MAAA,OAAA,EAAA;AACA,wBAAA,kBADA;AAEA,QAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,KAAA,EAMA,IANA,CAMA,UAAA,QAAA;AAAA,aAAA,MAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAAA,KANA,EAMA,KAAA,IAAA,GAAA,CANA,EAOA,IAPA,CAOA,KAAA,YAAA,EAPA,EAHA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAvGA,CAAA","sourcesContent":["\n<template>\n  <div class=\"main-div\">\n    <div class=\"holder\">\n      <!-- <h1>Welcome to CoronaTracker App</h1> -->\n\n      <h1> Health Status: </h1>\n\n      \n      <h1 v-show=\"healthStatus=='safe' || healthStatus=='low risk'\"> \n        <span class=\"badge badge-success\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='medium risk'\"> \n        <span id='medium-risk' class=\"badge badge-warning\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='high risk'\">\n        <span id='high-risk' class=\"badge badge-warning\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='carrier'\"> \n        <span class=\"badge badge-danger\">{{ healthStatus }}</span>\n      </h1>\n      \n\n      \n      \n    </div>  \n\n    <p>\n      Protect yourself and the others around you using CoronaTracker app. \n      It is quite easy, just press the \"Diagnosed\" button if you have diagnosed with coronavirus or another disease.\n    </p>\n\n    <button class=\"btn btn-primary\" type=\"submit\" v-on:click=\"affected\">Diagnosed</button>\n    <button class=\"btn btn-primary\" type=\"submit\" v-on:click=\"checker\">Check!</button>\n      \n  </div>\n</template>\n\n<script>\nimport axios from '@/axios'\n\nexport default {\n\n  data () {\n      \n      return {\n      healthStatus: null,\n      risk: null,\n      bgColor: 'yellow',\n      bgWidth: '100%',\n      bgHeight: '30px',\n\n    }\n  },\n\n\n\n\n  \n  \n\n\n  methods: {\n    affected: function () {\n\n      const self = this\n      // console.log(self.$session.get('jwt'))\n\n      axios.put('/users/status', {positive : true}, {\n        headers:{'Authorization': 'Bearer ' +  self.$session.get('jwt')}\n        })\n        .then(axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n                    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n        )\n\n      .then(alert(\"You were diagnosed positive to Covid-19, stay home!\\n\\n\"\n            + \"All users who came in contact with you the last few days may be at risk and will get notified to prevent spreading.\"))\n      // .then(this.healthStatus = 'carrier')\n      .then(this.$forceUpdate())\n\n\n      \n    },\n\n    checker: function() {\n   \n      const self = this\n      axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n    .then(alert(\"Checking for current health status\\n\\n\"\n            ))\n    }\n    ,\n\n\n    intervals: function() {\n        setInterval(function(){ this.checker\n        }, 3000);\n    }    \n\n  },\n\n\n  mounted () {\n\n    const self = this\n      axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n    .then(this.$forceUpdate())\n\n\n\n    // setInterval(function (){\n    //                     (axios.get('/users/status', {\n    //                     headers: { \n    //                         'Content-Type': 'application/json',\n    //                         Authorization: 'Bearer ' +  self.$session.get('jwt')\n    //                     }\n    //                 })\n    // .then(response => this.healthStatus = response.data.message))\n    // .then(console.log(this.healthStatus))\n    // .then(this.healthStatus.$forceUpdate())\n    // .then(this. $forceUpdate (this.healthStatus));}, 1000)\n\n\n    \n  \n                    \n\n  }\n\n}\n  \n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .holder {\n    /* text-align: center; */\n    background: #fff;\n  }\n\n  p {\n    /* text-align:center; */\n    padding: 30px 0;\n    color: gray;\n    font-size: 20px;\n  }\n\n  .container {\n    box-shadow: 0px 0px 40px lightgray;\n  }\n  .alert {\n    background-color: yellow;\n  }\n  .another-class {\n    border: 5px solid black\n  }\n  button {\n  align-items: center;\n  padding: 15px 50px;\n  border: 1px solid #0275d8;\n  color: #0275d8;\n  background-color:#fff;\n  border-radius: 20px;\n  font-size: 25px;\n  font-family: '微软雅黑','arial';\n  cursor: pointer;\n  /* margin: auto;\n  display: block; */\n  }\n\n\n  #high-risk {\n    background-color: rgb(255, 150, 0)\n  }\n\n\n   /* {\n    text-align: center\n  } */\n\n\n  \n</style>\n\n"],"sourceRoot":"src/components"}]}