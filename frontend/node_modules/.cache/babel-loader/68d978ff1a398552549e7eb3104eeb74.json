{"remainingRequest":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/babel-loader/lib/index.js!/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chelakis/infsec/infsecfinal/vue-infsec-proj/src/components/Texts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/src/components/Texts.vue","mtime":1591025459781},{"path":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/vue-infsec-proj/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ0AvYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGhlYWx0aFN0YXR1czogbnVsbCwKICAgICAgcmlzazogbnVsbCwKICAgICAgYmdDb2xvcjogJ3llbGxvdycsCiAgICAgIGJnV2lkdGg6ICcxMDAlJywKICAgICAgYmdIZWlnaHQ6ICczMHB4JwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFmZmVjdGVkOiBmdW5jdGlvbiBhZmZlY3RlZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzZWxmID0gdGhpczsgLy8gY29uc29sZS5sb2coc2VsZi4kc2Vzc2lvbi5nZXQoJ2p3dCcpKQoKICAgICAgYXhpb3MucHV0KCcvdXNlcnMvc3RhdHVzJywgewogICAgICAgIHBvc2l0aXZlOiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHNlbGYuJHNlc3Npb24uZ2V0KCdqd3QnKQogICAgICAgIH0KICAgICAgfSkudGhlbihheGlvcy5nZXQoJy91c2Vycy9zdGF0dXMnLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHNlbGYuJHNlc3Npb24uZ2V0KCdqd3QnKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXR1cm4gX3RoaXMuaGVhbHRoU3RhdHVzID0gcmVzcG9uc2UuZGF0YS5tZXNzYWdlOwogICAgICB9LCB0aGlzLnJpc2sgPSAwKSkgLy8gewogICAgICAvLyBoZWFkZXJzOiB7IAogICAgICAvLyAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgLy8gICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgIHNlbGYuJHNlc3Npb24uZ2V0KCdqd3QnKQogICAgICAvLyB9fSx7CiAgICAgIC8vIGRhdGE6IAogICAgICAvLyAgIHtwb3NpdGl2ZSA6IHRydWV9CiAgICAgIC8vIH0pCiAgICAgIC8vIFRPRE86ICJEaWFnbm9zZWQiIEJ1dHRvbiBFdmVudCBIYW5kbGVyCiAgICAgIC8vIGF4aW9zCiAgICAgIC8vIC5wYXRjaCgnL3VzZXJzLzEnLCB7CiAgICAgIC8vICAgc3RhdHVzOiAnRGlhZ25vc2VkIFBvc2l0aXZlJwogICAgICAvLyB9KQogICAgICAudGhlbihhbGVydCgiWW91IHdlcmUgZGlhZ25vc2VkIHBvc2l0aXZlIHRvIENvdmlkLTE5LCBzdGF5IGhvbWUhXG5cbiIgKyAiQWxsIHVzZXJzIHdobyBjYW1lIGluIGNvbnRhY3Qgd2l0aCB5b3UgdGhlIGxhc3QgZmV3IGRheXMgbWF5IGJlIGF0IHJpc2sgYW5kIHdpbGwgZ2V0IG5vdGlmaWVkIHRvIHByZXZlbnQgc3ByZWFkaW5nLiIpKSAvLyAudGhlbih0aGlzLmhlYWx0aFN0YXR1cyA9ICdjYXJyaWVyJykKICAgICAgLnRoZW4odGhpcy4kZm9yY2VVcGRhdGUoKSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgdmFyIHNlbGYgPSB0aGlzOwogICAgYXhpb3MuZ2V0KCcvdXNlcnMvc3RhdHVzJywgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBzZWxmLiRzZXNzaW9uLmdldCgnand0JykKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgcmV0dXJuIF90aGlzMi5oZWFsdGhTdGF0dXMgPSByZXNwb25zZS5kYXRhLm1lc3NhZ2U7CiAgICB9LCB0aGlzLnJpc2sgPSAwKTsgLy8gY29uc29sZS5sb2coc2VsZi4kc2Vzc2lvbi5nZXQoJ2p3dCcpKQoKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgYXhpb3MuZ2V0KCcvdXNlcnMvc3RhdHVzJywgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICBBdXRob3JpemF0aW9uOiAnQmVhcmVyICcgKyBzZWxmLiRzZXNzaW9uLmdldCgnand0JykKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwgMTAwMDApLnRoZW4odGhpcy4kZm9yY2VVcGRhdGUoKSk7IC8vIGF4aW9zCiAgICAvLyAuZ2V0KCcvdXNlcnMvMScpCiAgICAvLyAudGhlbihyZXNwb25zZSA9PiAodGhpcy5oZWFsdGhTdGF0dXMgPSByZXNwb25zZS5kYXRhLnN0YXR1cykpCiAgfQp9Ow=="},{"version":3,"sources":["Texts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,OAAA,KAAA,MAAA,SAAA;AAEA,eAAA;AAEA,EAAA,IAFA,kBAEA;AAEA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,OAAA,EAAA,QAHA;AAIA,MAAA,OAAA,EAAA,MAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAXA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,oBAAA;AAAA;;AAEA,UAAA,IAAA,GAAA,IAAA,CAFA,CAGA;;AAEA,MAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA;AAAA,2BAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAAA;AADA,OAAA,EAGA,IAHA,CAGA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA,kBADA;AAEA,UAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,OAAA,EAMA,IANA,CAMA,UAAA,QAAA;AAAA,eAAA,KAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAAA,OANA,EAMA,KAAA,IAAA,GAAA,CANA,CAHA,EAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAzBA,OA0BA,IA1BA,CA0BA,KAAA,CAAA,4DACA,qHADA,CA1BA,EA4BA;AA5BA,OA6BA,IA7BA,CA6BA,KAAA,YAAA,EA7BA;AAiCA;AAvCA,GAbA;AA2DA,EAAA,OA3DA,qBA2DA;AAAA;;AACA,QAAA,IAAA,GAAA,IAAA;AAEA,IAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,MAAA,OAAA,EAAA;AACA,wBAAA,kBADA;AAEA,QAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,KAAA,EAMA,IANA,CAMA,UAAA,QAAA;AAAA,aAAA,MAAA,CAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAAA,KANA,EAMA,KAAA,IAAA,GAAA,CANA,EAHA,CAUA;;AAGA,IAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,eAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,0BAAA,kBADA;AAEA,UAAA,aAAA,EAAA,YAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA;AAFA;AADA,OAAA;AAKA,KANA,EAMA,KANA,CAAA,CAOA,IAPA,CAOA,KAAA,YAAA,EAPA,EAbA,CAuBA;AACA;AACA;AACA;AArFA,CAAA","sourcesContent":["\n<template>\n  <div class=\"main-div\">\n    <div class=\"holder\">\n      <!-- <h1>Welcome to CoronaTracker App</h1> -->\n\n      \n      <h1 v-if=\"healthStatus=='safe' || healthStatus=='low risk'\">Health Status: \n        <span class=\"badge badge-success\">{{healthStatus}}</span>\n      </h1>\n      <h1 v-else-if=\"healthStatus=='medium risk'\">Health Status: \n        <span id='medium-risk' class=\"badge badge-warning\">{{healthStatus}}</span>\n      </h1>\n      <h1 v-else-if=\"healthStatus=='high risk'\">Health Status:\n        <span id='high-risk' class=\"badge badge-warning\">{{healthStatus}}</span>\n      </h1>\n      <h1 v-else-if=\"healthStatus=='carrier'\">Health Status: \n        <span class=\"badge badge-danger\">{{healthStatus}}</span>\n      </h1>\n      \n\n      <!-- TODO: Progress bar of risk - color depend on risk -->\n\n      <!-- <h1 v-if=\"healthStatus=='safe' || healthStatus=='low risk'\">\n        <div class=\"progress\">\n          <div id='ela' class=\"progress-bar progress-bar-success\" role=\"progressbar\" aria-valuenow=\"40\"\n            aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:50%\">40% Complete (success)\n          </div>\n        </div>\n      </h1>\n      <h1 v-else-if=\"healthStatus=='medium risk'\">\n\n      </h1>\n      <h1 v-else-if=\"healthStatus=='high risk'\">\n\n      </h1>\n      <h1 v-else-if=\"healthStatus=='carrier'\">\n\n      </h1>  -->\n      \n    </div>  \n\n    <p>\n      Protect yourself and the others around you using CoronaTracker app. \n      It is quite easy, just press the \"Diagnosed\" button if you have diagnosed with coronavirus or another disease.\n    </p>\n\n    <button class=\"btn btn-primary\" type=\"submit\" v-on:click=\"affected\">Diagnosed</button>\n      \n  </div>\n</template>\n\n<script>\nimport axios from '@/axios'\n\nexport default {\n\n  data () {\n      \n      return {\n      healthStatus: null,\n      risk: null,\n      bgColor: 'yellow',\n      bgWidth: '100%',\n      bgHeight: '30px'\n    }\n  },\n\n  methods: {\n    affected: function () {\n\n      const self = this\n      // console.log(self.$session.get('jwt'))\n\n      axios.put('/users/status', {positive : true}, {\n        headers:{'Authorization': 'Bearer ' +  self.$session.get('jwt')}\n        })\n        .then(axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n                    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n        )\n      // {\n                        // headers: { \n                        //     'Content-Type': 'application/json',\n                        //     'Authorization': 'Bearer ' +  self.$session.get('jwt')\n                        // }},{\n                        // data: \n                        //   {positive : true}\n    // })\n\n      // TODO: \"Diagnosed\" Button Event Handler\n\n      // axios\n      // .patch('/users/1', {\n      //   status: 'Diagnosed Positive'\n      // })\n      .then(alert(\"You were diagnosed positive to Covid-19, stay home!\\n\\n\"\n            + \"All users who came in contact with you the last few days may be at risk and will get notified to prevent spreading.\"))\n      // .then(this.healthStatus = 'carrier')\n      .then(this.$forceUpdate())\n\n\n      \n    }\n    \n\n  },\n  \n  \n\n  mounted () {\n    const self = this\n    \n    axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n    // console.log(self.$session.get('jwt'))\n\n  \n    setInterval(function (){\n                        axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })}, 10000)\n    .then(this.$forceUpdate())\n  \n                    \n    // axios\n    // .get('/users/1')\n    // .then(response => (this.healthStatus = response.data.status))\n  }\n\n}\n  \n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .holder {\n    /* text-align: center; */\n    background: #fff;\n  }\n\n  p {\n    /* text-align:center; */\n    padding: 30px 0;\n    color: gray;\n    font-size: 20px;\n  }\n\n  .container {\n    box-shadow: 0px 0px 40px lightgray;\n  }\n  .alert {\n    background-color: yellow;\n  }\n  .another-class {\n    border: 5px solid black\n  }\n  button {\n  align-items: center;\n  padding: 15px 50px;\n  border: 1px solid #0275d8;\n  color: #0275d8;\n  background-color:#fff;\n  border-radius: 20px;\n  font-size: 25px;\n  font-family: '微软雅黑','arial';\n  cursor: pointer;\n  /* margin: auto;\n  display: block; */\n  }\n\n\n  #high-risk {\n    background-color: rgb(255, 150, 0)\n  }\n\n\n   /* {\n    text-align: center\n  } */\n\n\n  \n</style>\n\n"],"sourceRoot":"src/components"}]}