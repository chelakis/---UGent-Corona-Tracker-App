{"remainingRequest":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chelakis/infsec/infsecfinal/frontend/src/components/Texts.vue?vue&type=style&index=0&id=9c0d2c34&scoped=true&lang=css&","dependencies":[{"path":"/home/chelakis/infsec/infsecfinal/frontend/src/components/Texts.vue","mtime":1591142934776},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/chelakis/infsec/infsecfinal/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaG9sZGVyIHsKICAvKiB0ZXh0LWFsaWduOiBjZW50ZXI7ICovCiAgYmFja2dyb3VuZDogI2ZmZjsKfQoKcCB7CiAgLyogdGV4dC1hbGlnbjpjZW50ZXI7ICovCiAgcGFkZGluZzogMzBweCAwOwogIGNvbG9yOiBncmF5OwogIGZvbnQtc2l6ZTogMjBweDsKfQoKLmNvbnRhaW5lciB7CiAgYm94LXNoYWRvdzogMHB4IDBweCA0MHB4IGxpZ2h0Z3JheTsKfQouYWxlcnQgewogIGJhY2tncm91bmQtY29sb3I6IHllbGxvdzsKfQouYW5vdGhlci1jbGFzcyB7CiAgYm9yZGVyOiA1cHggc29saWQgYmxhY2sKfQpidXR0b24gewphbGlnbi1pdGVtczogY2VudGVyOwpwYWRkaW5nOiAxNXB4IDUwcHg7CmJvcmRlcjogMXB4IHNvbGlkICMwMjc1ZDg7CmNvbG9yOiAjMDI3NWQ4OwpiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7CmJvcmRlci1yYWRpdXM6IDIwcHg7CmZvbnQtc2l6ZTogMjVweDsKZm9udC1mYW1pbHk6ICflvq7ova/pm4Xpu5EnLCdhcmlhbCc7CmN1cnNvcjogcG9pbnRlcjsKLyogbWFyZ2luOiBhdXRvOwpkaXNwbGF5OiBibG9jazsgKi8KfQoKCiNoaWdoLXJpc2sgewogIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDE1MCwgMCkKfQoKCiAvKiB7CiAgdGV4dC1hbGlnbjogY2VudGVyCn0gKi8KCgoK"},{"version":3,"sources":["Texts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA","file":"Texts.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <div class=\"main-div\">\n    <div class=\"holder\">\n      <!-- <h1>Welcome to CoronaTracker App</h1> -->\n\n      <h1> Health Status: </h1>\n\n      \n      <h1 v-show=\"healthStatus=='safe' || healthStatus=='low risk'\"> \n        <span class=\"badge badge-success\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='medium risk'\"> \n        <span id='medium-risk' class=\"badge badge-warning\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='high risk'\">\n        <span id='high-risk' class=\"badge badge-warning\">{{ healthStatus }}</span>\n      </h1>\n      <h1 v-show=\"healthStatus=='carrier'\"> \n        <span class=\"badge badge-danger\">{{ healthStatus }}</span>\n      </h1>\n      \n\n      \n      \n    </div>  \n\n    <p>\n      Protect yourself and the others around you using CoronaTracker app. \n      It is quite easy, just press the \"Diagnosed\" button if you have diagnosed with coronavirus or another disease.\n    </p>\n\n    <button class=\"btn btn-primary\" type=\"submit\" v-on:click=\"affected\">Diagnosed</button>\n    <button class=\"btn btn-primary\" type=\"submit\" v-on:click=\"checker\">Check!</button>\n      \n  </div>\n</template>\n\n<script>\nimport axios from '@/axios'\n\nexport default {\n\n  data () {\n      \n      return {\n      healthStatus: null,\n      risk: null,\n      bgColor: 'yellow',\n      bgWidth: '100%',\n      bgHeight: '30px',\n\n    }\n  },\n\n\n\n\n  \n  \n\n\n  methods: {\n    affected: function () {\n\n      const self = this\n      // console.log(self.$session.get('jwt'))\n\n      axios.put('/users/status', {positive : true}, {\n        headers:{'Authorization': 'Bearer ' +  self.$session.get('jwt')}\n        })\n        .then(axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n                    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n        )\n\n      .then(alert(\"You were diagnosed positive to Covid-19, stay home!\\n\\n\"\n            + \"All users who came in contact with you the last few days may be at risk and will get notified to prevent spreading.\"))\n      // .then(this.healthStatus = 'carrier')\n      .then(this.$forceUpdate())\n\n\n      \n    },\n\n    checker: function() {\n   \n      const self = this\n      axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n    .then(alert(\"Checking for current health status\\n\\n\"\n            ))\n    }\n    ,\n\n\n    intervals: function() {\n        setInterval(function(){ this.checker\n        }, 3000);\n    }    \n\n  },\n\n\n  mounted () {\n\n    const self = this\n      axios.get('/users/status', {\n                        headers: { \n                            'Content-Type': 'application/json',\n                            Authorization: 'Bearer ' +  self.$session.get('jwt')\n                        }\n                    })\n    .then(response => this.healthStatus = response.data.message, this.risk = 0)\n    .then(this.$forceUpdate())\n\n\n\n    // setInterval(function (){\n    //                     (axios.get('/users/status', {\n    //                     headers: { \n    //                         'Content-Type': 'application/json',\n    //                         Authorization: 'Bearer ' +  self.$session.get('jwt')\n    //                     }\n    //                 })\n    // .then(response => this.healthStatus = response.data.message))\n    // .then(console.log(this.healthStatus))\n    // .then(this.healthStatus.$forceUpdate())\n    // .then(this. $forceUpdate (this.healthStatus));}, 1000)\n\n\n    \n  \n                    \n\n  }\n\n}\n  \n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  .holder {\n    /* text-align: center; */\n    background: #fff;\n  }\n\n  p {\n    /* text-align:center; */\n    padding: 30px 0;\n    color: gray;\n    font-size: 20px;\n  }\n\n  .container {\n    box-shadow: 0px 0px 40px lightgray;\n  }\n  .alert {\n    background-color: yellow;\n  }\n  .another-class {\n    border: 5px solid black\n  }\n  button {\n  align-items: center;\n  padding: 15px 50px;\n  border: 1px solid #0275d8;\n  color: #0275d8;\n  background-color:#fff;\n  border-radius: 20px;\n  font-size: 25px;\n  font-family: '微软雅黑','arial';\n  cursor: pointer;\n  /* margin: auto;\n  display: block; */\n  }\n\n\n  #high-risk {\n    background-color: rgb(255, 150, 0)\n  }\n\n\n   /* {\n    text-align: center\n  } */\n\n\n  \n</style>\n\n"]}]}